# MegaLinter configuration for claude-flake project
# This replaces the language-specific linting in smart-lint.sh
# Nix files are handled separately as they're not supported by MegaLinter

# Enable specific languages that were previously handled by smart-lint.sh
ENABLE:
  - GO
  - PYTHON
  - JAVASCRIPT
  - RUST
  - BASH
  - MARKDOWN
  - YAML
  - JSON

# Apply fixes automatically (matches smart-lint.sh behavior)
APPLY_FIXES: all

# Output configuration for script parsing
SARIF_REPORTER: true
JSON_REPORTER: true
SHOW_ELAPSED_TIME: true

# File filtering - respect .claude-hooks-ignore patterns
FILTER_REGEX_EXCLUDE: |
  (result/|/nix/store/|\.git/|node_modules/|\.venv/|target/|\.mypy_cache/|\.pytest_cache/|__pycache__/)

# Disable linters that conflict with our workflow
DISABLE_LINTERS:
  - SPELL_CSPELL  # Too noisy for technical content
  - COPYPASTE_JSCPD  # Not relevant for our use case
  - REPOSITORY_SECRETLINT  # We handle secrets separately

# Go configuration
GO_GOLANGCI_LINT_ARGUMENTS: "--timeout=2m"
GO_GOFMT_ARGUMENTS: ""

# Python configuration  
PYTHON_BLACK_ARGUMENTS: ""
PYTHON_RUFF_ARGUMENTS: "--fix"
PYTHON_RUFF_CONFIG_FILE: ".ruff.toml"  # If exists

# JavaScript configuration
JAVASCRIPT_ES_CONFIG_FILE: ".eslintrc.js"  # If exists
JAVASCRIPT_PRETTIER_CONFIG_FILE: ".prettierrc"  # If exists

# Rust configuration
RUST_CARGO_ARGUMENTS: "fmt --"
RUST_CLIPPY_ARGUMENTS: "--quiet -- -D warnings"

# Bash configuration
BASH_SHELLCHECK_ARGUMENTS: ""

# Performance and behavior settings
PARALLEL: true
SHOW_SKIPPED_LINTERS: false
CLEAR_REPORT_FOLDER: true

# Integration settings for CI/local runs
MEGALINTER_CONFIG: ".mega-linter.yml"
LOG_LEVEL: "INFO"